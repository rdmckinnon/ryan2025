---
import BgGrid from "@/components/assets/BgGrid.astro";
import { galleryItems } from "@/data/gallery";

const shuffled = [...galleryItems].sort(() => Math.random() - 0.5);
const sliderItems = [...shuffled, ...shuffled];
---

<section id="frames" class="border-b border-white/20 divide-y divide-white/20">
  <div class="px-8 py-6 relative">
    <BgGrid />
    <h2 class="text-3xl font-black text-white uppercase">
      snapshots from the everyday
    </h2>
  </div>
  <div class="relative">
    <div
      class="absolute inset-y-0 left-0 right-0 flex items-center justify-between px-2 pointer-events-none z-10"
    >
      <button
        id="keen-slider-previous"
        aria-label="Previous slide"
        class="pointer-events-auto p-2 size-8 bg-white/80 hover:bg-white text-black rounded-full shadow transition"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 256 256">
          <path d="M165.66,202.34a8,8,0,0,1-11.32,11.32l-80-80a8,8,0,0,1,0-11.32l80-80a8,8,0,0,1,11.32,11.32L91.31,128Z"></path>
        </svg>
      </button>
      <button
        id="keen-slider-next"
        aria-label="Next slide"
        class="pointer-events-auto p-2 size-8 bg-white hover:bg-white text-black rounded-full shadow transition"
      >
        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 256 256">
          <path d="M181.66,133.66l-80,80a8,8,0,0,1-11.32-11.32L164.69,128,90.34,53.66a8,8,0,0,1,11.32-11.32l80,80A8,8,0,0,1,181.66,133.66Z"></path>
        </svg>
      </button>
    </div>
    <div id="keen-slider" class="keen-slider relative">
      {
        sliderItems.map((item) => (
          <div class="relative w-full keen-slider__slide">
            <img
              src={item.image}
              alt={item.title}
              loading="lazy"
              class="h-80 w-full object-cover"
            />
            <div class="absolute inset-x-0 bottom-0 bg-black/60 py-3 text-center text-[0.65rem] uppercase tracking-[0.4em] text-slate-100">
              {item.title}
            </div>
          </div>
        ))
      }
    </div>
  </div>
</section>

<script type="module">
  import KeenSlider from "https://cdn.jsdelivr.net/npm/keen-slider@6.8.6/+esm";

  window.addEventListener("DOMContentLoaded", () => {
    const autoplay = (slider) => {
      let timeout;
      let mouseOver = false;

      function clearNextTimeout() {
        clearTimeout(timeout);
      }

      function nextTimeout() {
        clearTimeout(timeout);
        if (mouseOver) return;
        timeout = setTimeout(() => {
          slider.next();
        }, 2500);
      }

      slider.on("created", () => {
        slider.container.addEventListener("mouseover", () => {
          mouseOver = true;
          clearNextTimeout();
        });
        slider.container.addEventListener("mouseout", () => {
          mouseOver = false;
          nextTimeout();
        });
        nextTimeout();
      });

      slider.on("dragStarted", clearNextTimeout);
      slider.on("animationEnded", nextTimeout);
      slider.on("updated", nextTimeout);
    };

    const sliderEl = document.getElementById("keen-slider");
    if (!sliderEl) return;

    const keenSlider = new KeenSlider(
      sliderEl,
      {
        loop: true,
        defaultAnimation: {
          duration: 1200,
        },
        detailsChanged: (s) => {
          s.slides.forEach((element, idx) => {
            element.style.opacity = s.track.details.slides[idx].portion;
          });
        },
        slides: {
          origin: "center",
          perView: 2.2,
          spacing: 12,
        },
        breakpoints: {
          "(min-width: 1024px)": {
            slides: {
              origin: "center",
              perView: 3.5,
              spacing: 0,
            },
          },
        },
      },
      [autoplay]
    );

    document.getElementById("keen-slider-previous")?.addEventListener("click", () => keenSlider.prev());
    document.getElementById("keen-slider-next")?.addEventListener("click", () => keenSlider.next());
  });
</script>
