---
import BaseLayout from "@/layouts/BaseLayout.astro";
import BgGrid from "@/components/assets/BgGrid.astro";
---

<BaseLayout>
  <section id="listening" class="border-white/20 border-b divide-y divide-white/20">
    <!-- Header -->
    <div class="p-8 relative">
      <BgGrid />
      <h1 class="text-white tracking-tighter font-black uppercase text-3xl lg:text-8xl relative">
        Listening Habits
      </h1>
    </div>

    <!-- Subtitle -->
    <div class="p-8">
      <p class="text-white font-black uppercase tracking-tight lg:text-3xl text-xl">
        What's been on repeat lately
      </p>
    </div>

    <!-- Loading State -->
    <div class="p-8" id="loading">
      <div class="text-center text-slate-300">
        <p class="text-lg">Loading your listening stats...</p>
      </div>
    </div>

    <!-- Content Container (will be populated by JavaScript) -->
    <div id="stats-container" style="display: none;">
      <!-- All-Time Stats -->
      <div class="p-8" id="all-time-stats"></div>

      <!-- Last 30 Days Stats -->
      <div class="p-8" id="last-30-stats"></div>

      <!-- Top Artists -->
      <div class="p-8" id="top-artists"></div>

      <!-- Top Tracks -->
      <div class="p-8" id="top-tracks"></div>

      <!-- Recent Scrobbles -->
      <div class="p-8" id="recent-scrobbles"></div>
    </div>

    <!-- Error State -->
    <div class="p-8" id="error" style="display: none;">
      <div class="border border-white/10 p-12 text-center">
        <p class="text-slate-300 text-lg mb-4">
          Unable to load listening data. Please try again later.
        </p>
      </div>
    </div>
  </section>
</BaseLayout>

<script>
  async function loadStats() {
    try {
      const response = await fetch('/api/listening-stats');
      if (!response.ok) throw new Error('Failed to fetch stats');

      const data = await response.json();

      document.getElementById('loading')!.style.display = 'none';
      document.getElementById('stats-container')!.style.display = 'block';

      renderStats(data);
    } catch (error) {
      console.error('Error loading stats:', error);
      document.getElementById('loading')!.style.display = 'none';
      document.getElementById('error')!.style.display = 'block';
    }
  }

  function renderStats(data: any) {
    const { last30Days, allTime } = data;

    // All-Time Stats
    if (allTime.totalScrobbles > 0) {
      const daysListening = Math.floor((Date.now() / 1000 - 1609459200) / 86400); // Rough estimate
      document.getElementById('all-time-stats')!.innerHTML = `
        <h2 class="text-white font-black uppercase text-xl mb-6">All-Time Stats</h2>
        <div class="grid gap-6 md:grid-cols-3">
          <div class="border border-white/10 p-6">
            <div class="text-4xl font-black text-cyan-300 mb-2">
              ${allTime.totalScrobbles.toLocaleString()}
            </div>
            <div class="text-sm text-slate-300 uppercase tracking-wider">Total Scrobbles</div>
          </div>
          <div class="border border-white/10 p-6">
            <div class="text-4xl font-black text-cyan-300 mb-2">
              ${daysListening.toLocaleString()}
            </div>
            <div class="text-sm text-slate-300 uppercase tracking-wider">Days Listening</div>
          </div>
          ${allTime.topArtist ? `
            <div class="border border-white/10 p-6">
              <div class="text-2xl font-black text-cyan-300 mb-2 truncate">
                ${allTime.topArtist.name}
              </div>
              <div class="text-sm text-slate-300 uppercase tracking-wider">
                Top Artist (${allTime.topArtist.play_count} plays)
              </div>
            </div>
          ` : ''}
        </div>
      `;
    }

    // Last 30 Days Stats
    document.getElementById('last-30-stats')!.innerHTML = `
      <h2 class="text-white font-black uppercase text-xl mb-6">Last 30 Days</h2>
      <div class="grid gap-6 md:grid-cols-3">
        <div class="border border-white/10 p-6">
          <div class="text-4xl font-black text-white mb-2">
            ${last30Days.totalScrobbles.toLocaleString()}
          </div>
          <div class="text-sm text-slate-300 uppercase tracking-wider">Scrobbles</div>
        </div>
        <div class="border border-white/10 p-6">
          <div class="text-4xl font-black text-white mb-2">
            ${last30Days.uniqueTracks.toLocaleString()}
          </div>
          <div class="text-sm text-slate-300 uppercase tracking-wider">Unique Tracks</div>
        </div>
        <div class="border border-white/10 p-6">
          <div class="text-4xl font-black text-white mb-2">
            ${last30Days.uniqueArtists.toLocaleString()}
          </div>
          <div class="text-sm text-slate-300 uppercase tracking-wider">Unique Artists</div>
        </div>
      </div>
    `;

    // Top Artists
    if (last30Days.topArtists.length > 0) {
      const artistsHTML = last30Days.topArtists.map((artist: any, index: number) => `
        <div class="flex items-center justify-between border-b border-white/10 pb-3">
          <div class="flex items-center gap-4">
            <div class="text-2xl font-black text-slate-500 w-8">${index + 1}</div>
            <div>
              <div class="text-lg font-bold text-white uppercase tracking-tight">${artist.name}</div>
              <div class="text-xs text-slate-400 uppercase tracking-wider">${artist.play_count} plays</div>
            </div>
          </div>
        </div>
      `).join('');

      document.getElementById('top-artists')!.innerHTML = `
        <h2 class="text-white font-black uppercase text-xl mb-6">Top Artists (30 Days)</h2>
        <div class="space-y-3">${artistsHTML}</div>
      `;
    }

    // Top Tracks
    if (last30Days.topTracks.length > 0) {
      const tracksHTML = last30Days.topTracks.map((track: any, index: number) => `
        <div class="flex items-center justify-between border-b border-white/10 pb-3">
          <div class="flex items-center gap-4">
            <div class="text-2xl font-black text-slate-500 w-8">${index + 1}</div>
            <div>
              <div class="text-lg font-bold text-white uppercase tracking-tight">${track.name}</div>
              <div class="text-sm text-slate-300">${track.artist_name}</div>
              <div class="text-xs text-slate-400 uppercase tracking-wider">${track.play_count} plays</div>
            </div>
          </div>
        </div>
      `).join('');

      document.getElementById('top-tracks')!.innerHTML = `
        <h2 class="text-white font-black uppercase text-xl mb-6">Top Tracks (30 Days)</h2>
        <div class="space-y-3">${tracksHTML}</div>
      `;
    }

    // Recent Scrobbles
    if (last30Days.recentScrobbles.length > 0) {
      const formatRelativeTime = (timestamp: number) => {
        const diff = Date.now() / 1000 - timestamp;
        const minutes = Math.floor(diff / 60);
        const hours = Math.floor(diff / 3600);
        const days = Math.floor(diff / 86400);
        if (minutes < 60) return `${minutes}m ago`;
        if (hours < 24) return `${hours}h ago`;
        return `${days}d ago`;
      };

      const scrobblesHTML = last30Days.recentScrobbles.map((scrobble: any) => `
        <div class="flex items-center justify-between border-b border-white/10 pb-2 text-sm">
          <div>
            <div class="text-white font-bold">${scrobble.track_name}</div>
            <div class="text-slate-400">${scrobble.artist_name}</div>
          </div>
          <div class="text-slate-500 text-xs uppercase tracking-wider">
            ${formatRelativeTime(scrobble.played_at)}
          </div>
        </div>
      `).join('');

      document.getElementById('recent-scrobbles')!.innerHTML = `
        <h2 class="text-white font-black uppercase text-xl mb-6">Recently Played</h2>
        <div class="space-y-2">${scrobblesHTML}</div>
      `;
    }
  }

  loadStats();
</script>
